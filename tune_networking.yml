---
- name: determine the servers that are on physical machines
  hosts: all:!unmanaged_systems
  become: true
  tasks:
    - name: group by virtualization type
      group_by: 
        key: "{{ 'physical' if ansible_virtualization_type == 'NA' 
                            or ansible_virtualization_type == 'kvm' else '' }}"

- name: determine the NIC throughput and OS version for the physical servers
  hosts: physical
  become: true
  gather_facts: false
  tasks:
    - name: call ethtool
      shell: "ethtool {{ ansible_default_ipv4.alias }} | sed -n 's/\tSpeed: \\([0-9]*\\).*/\\1/p'"
      register: ethtool
      changed_when: false

    - name: group by NIC speed
      group_by: 
        key: centos{{ ansible_distribution_major_version }}_{{ 
                '10G' if ethtool.stdout|int >= 10000 else
                '1G'  if ethtool.stdout|int >= 1000 else '' }}

# TODO MTU tuning needs to be done based on the broadcast domain
- name: tune MTU
# TODO figure out if the IES having an MTU of 9000 without the DBMS having an MTU of 9000 affects
# performance.
#  hosts: physical:&irods
  hosts: physical:&rs
  become: true
  gather_facts: false
  roles:
    - role: cyverse.ip
      ip_link_mtu: "{{ nic_mtu }}"

- name: tune txqueuelen
  hosts: physical
  become: true
  gather_facts: false
  roles:
    - role: cyverse.ip
      ip_link_txqueuelen: "{{ nic_txqueuelen }}"

- name: tune TCP
  hosts: physical
  become: true
  gather_facts: false
  tasks:
    - name: configure linux kernel 
      sysctl:
        name: net.{{ item.name }}
        value: "{{ item.value }}"
      with_items: "{{ sysctl_net }}"

