---
- import_playbook: provision.yml


- name: test install resource server package
  hosts: rs:!ies:!unmanaged_systems
  become: true
  tasks:
    - import_tasks: tasks/test_install_resource_pkg.yml

    - import_tasks: tasks/test_install_plugins.yml


- import_playbook: cfg_irods.yml


- name: test bootstrap iRODS start
  hosts: dstesting_rs_centos7_1.dstesting_default
  become: true
  become_user: irods
  tasks:
    - name: test create clerver user
      delegate_to: "{{ groups['ies'][0] }}"
      shell: |
        userType=$(iquest '%s' "select USER_TYPE where USER_NAME = 'rods'")
        if [ "$?" -ne 0 ]
        then
          printf 'IES appears to be down on {{ groups['ies'][0] }}\n' >&2
          exit 1
        fi

        if [[ "$userType" =~ ^CAT_NO_ROWS_FOUND ]]
        then
          printf 'rods does not exist\n' >&2
          exit 1
        fi

        if [ "$userType" != rodsadmin ]
        then
          printf 'rods is not a rodsadmin user\n' >&2
          exit 1
        fi

        IRODS_HOST='{{ groups['ies'][0] }}' \
        IRODS_USER_NAME=rods \
        IRODS_AUTHENTICATION_FILE=$(mktemp) \
        iinit rods
        if [ "$?" -ne 0 ]
        then
          printf 'rods has incorrect password\n' >&2
          exit 1
        fi
      changed_when: false

    - name: test clerver user is in group rodsadmin
      delegate_to: localhost
      become: false
      irods_group_member:
        group: rodsadmin
        users:
          - rods
        state: present
        host: "{{ groups['ies'][0] }}"
        port: 1247
        admin_user: rods 
        admin_password: rods
        zone: testing
      register: resp
      failed_when: resp.changed


    - name: test initialize resource server connection to IES
      stat:
        path: /var/lib/irods/.irods/.irodsA
      register: response
      failed_when: not response.stat.exists or response.stat.pw_name != 'irods'

    - import_tasks: tasks/test_irods_running.yml


- import_playbook: mk_storage_resources.yml
